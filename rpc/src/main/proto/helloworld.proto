syntax = "proto3";
package helloworld;

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloReply);

  rpc SubscribeClock (ClockRequest) returns (stream TickEvent);
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

message ClockRequest {
  uint32 tickPeriodMillis = 1;
}

message TickEvent {
  uint64 currentTimeMillis = 1;
}

service MuSig {
  rpc InitTrade (PubKeyShareRequest) returns (PubKeyShareResponse);

  rpc GetNonceShares (NonceShareRequest) returns (NonceShareMessage);

  rpc GetPartialSignatures (PartialSignatureRequest) returns (PartialSignatureMessage);

  rpc SignDepositTx (DepositTxSignatureRequest) returns (DepositPsbt);

  rpc PublishDepositTx (PublishDepositTxRequest) returns (stream TxConfirmationStatus);
}

enum Role {
  BUYER_AS_MAKER = 0;
  BUYER_AS_TAKER = 1;
  SELLER_AS_MAKER = 2;
  SELLER_AS_TAKER = 3;
}

message PubKeyShareRequest {
  string tradeId = 1;
  Role myRole = 2;
}

message PubKeyShareResponse {
  bytes buyerOutputPubKeyShare = 1;
  bytes sellerOutputPubKeyShare = 2;
  uint32 currentBlockHeight = 3;
}

message NonceShareRequest {
  string tradeId = 1;
  bytes buyerOutputPeersPubKeyShare = 2;
  bytes sellerOutputPeersPubKeyShare = 3;
  double depositTxFeeRate = 4;
  double preparedTxFeeRate = 5;
  uint64 tradeAmount = 6;
  uint64 buyersSecurityDeposit = 7;
  uint64 sellersSecurityDeposit = 8;
}

message NonceShareMessage {
  string warningTxFeeBumpAddress = 1;
  string redirectTxFeeBumpAddress = 2;
  bytes halfDepositPsbt = 3;
  bytes swapTxInputNonceShare = 4;
  bytes buyersWarningTxBuyerInputNonceShare = 5;
  bytes buyersWarningTxSellerInputNonceShare = 6;
  bytes sellersWarningTxBuyerInputNonceShare = 7;
  bytes sellersWarningTxSellerInputNonceShare = 8;
  bytes buyersRedirectTxInputNonceShare = 9;
  bytes sellersRedirectTxInputNonceShare = 10;
}

message ReceiverAddressAndAmount {
  string address = 1;
  uint64 amount = 2;
}

message PartialSignatureRequest {
  string tradeId = 1;
  NonceShareMessage peersNonceShares = 2;
  repeated ReceiverAddressAndAmount receivers = 3;
}

message PartialSignatureMessage {
  bytes peersWarningTxBuyerInputPartialSignature = 1;
  bytes peersWarningTxSellerInputPartialSignature = 2;
  bytes peersRedirectTxInputPartialSignature = 3;
  optional bytes swapTxInputAdaptorSignature = 4;
}

message DepositTxSignatureRequest {
  string tradeId = 1;
  PartialSignatureMessage peersPartialSignatures = 2;
}

message DepositPsbt {
  bytes depositPsbt = 1;
}

message PublishDepositTxRequest {
  string tradeId = 1;
  DepositPsbt depositPsbt = 2;
}

message TxConfirmationStatus {
  bytes tx = 1;
  uint32 currentBlockHeight = 2;
  uint32 numConfirmations = 3;
}
